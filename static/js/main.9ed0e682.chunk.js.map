{"version":3,"sources":["components/Joke/index.js","components/Loader/index.js","App.js","index.js"],"names":["joke","addJoke","unaddJoke","className","onClick","version","viewBox","aria-hidden","data-test","focusable","fillRule","d","data-variant","id","loader","data-text","API_URL","App","useState","jokes","setJokes","useLocalStorageState","likedJokes","setLikedJokes","isTimerOn","setTimerOn","length","shouldFetchMore","setShouldFetchMore","loading","setLoading","currentTab","setCurrentTab","find","j","newLikedJokes","useEffect","fetch","then","res","json","value","setTimeout","filter","AppBar","position","style","backgroundColor","Tabs","onChange","ev","centered","Tab","label","aria-controls","Badge","color","badgeContent","role","hidden","catch","err","console","warn","map","type","target","checked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ed0e682.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Joke.scss';\n\nexport default function joke({ joke, addJoke, unaddJoke }) {\n  let button;\n\n  return (\n    <li className=\"joke\">\n      <p>{joke.joke}</p>\n\n      {addJoke ? (\n        <button className=\"btn  btn--like\" onClick={() => addJoke(joke)}>\n          <span className=\"srt\">Add to favorites</span>\n          <svg version=\"1.1\" viewBox=\"0 0 14 14\" aria-hidden=\"true\" className=\"svg-inline\" data-test=\"icon-heart\" focusable=\"false\"><path fillRule=\"evenodd\" d=\"M7 12s5-3.33 5-6.628S8.769.951 7 3.105C5.225.958 2 2.074 2 5.372S7 12 7 12z\"></path></svg>\n        </button>\n      ) : (\n        <button className=\"btn  btn--like\" data-variant=\"liked\" onClick={() => unaddJoke(joke.id)}>\n          <span className=\"srt\">Remove from favorites</span>\n          <svg version=\"1.1\" viewBox=\"0 0 14 14\" aria-hidden=\"true\" className=\"svg-inline\" data-test=\"icon-heart\" focusable=\"false\"><path fillRule=\"evenodd\" d=\"M7 12s5-3.33 5-6.628S8.769.951 7 3.105C5.225.958 2 2.074 2 5.372S7 12 7 12z\"></path></svg>\n        </button>\n      )}\n    </li>\n  )\n}\n","import React from 'react'\n\nimport './Loader.scss';\n\nexport default function loader() {\n  return (\n    <div className=\"loader\">\n      <h1 className=\"loader__text\" data-text=\"Getting some jokes...\">Getting some jokes...</h1>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport useLocalStorageState from \"use-local-storage-state\";\n\n// I choose for Material UI for the ease of use for the tabpanels\nimport { Badge, AppBar, Tab, Tabs } from '@material-ui/core';\n\nimport Joke from './components/Joke/';\nimport Loader from './components/Loader';\nimport './App.scss';\n\nconst API_URL = `//api.icndb.com/jokes/random/`;\n\nfunction App() {\n  const [jokes, setJokes] = useState([]);\n  const [likedJokes, setLikedJokes] = useLocalStorageState('Jokes', []);\n  const [isTimerOn, setTimerOn] = useState(false);\n  const [shouldFetchMore, setShouldFetchMore] = useState(likedJokes.length < 10);\n  const [loading, setLoading] = useState(false);\n\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const changeTab = (ev, value) => {\n    setCurrentTab(value);\n  };\n\n  // Getting the jokes\n  const fetchJokes = () => {\n    setLoading(true);\n\n    fetch(API_URL + '10')\n      .then((res) => res.json())\n      .then((res) => {\n        setJokes(res.value);\n\n        // putt it in a timeout to always show the loader\n        setTimeout(() => {\n          setLoading(false);\n        }, 300);\n      })\n      .catch((err) => console.warn(`We have an error here: err ${err}`));\n  };\n\n  // Adding jokes to \"liked\" list\n  // #TODO - Check if there are saved jokes in the fetched list\n  // so I can always give them a \"liked\" flag\n  const addJoke = (joke) => {\n    if (likedJokes.find((j) => j.id === joke.id) || likedJokes.length > 9) return;\n    const newLikedJokes = [joke, ...likedJokes];\n\n    setLikedJokes(newLikedJokes);\n  }\n\n  useEffect(() => {\n    // Runs everytime isTimerOn OR shouldFetchMore changes OR list is not full\n    if (isTimerOn && shouldFetchMore && likedJokes.length < 10) {\n      fetch(API_URL)\n        .then(res => res.json())\n        .then((res) => {\n          addJoke(res.value);\n          setShouldFetchMore(false);\n\n          setTimeout(() => {\n            setShouldFetchMore(true)\n          }, 5000);\n        })\n    }\n  }, [isTimerOn, shouldFetchMore]);\n\n  // Toggle the timer state\n  const toggleTimer = (ev) => {\n    setTimerOn(ev.target.checked);\n  }\n\n  // Remove joke from liked list\n  const unaddJoke = (id) => {\n    const newLikedJokes = likedJokes.filter((j) => j.id !== id);\n\n    setLikedJokes(newLikedJokes);\n  };\n\n  return (\n    <>\n      <AppBar position='sticky' style={{backgroundColor: `var(--color-sunglo)`}}>\n        <Tabs value={currentTab} onChange={changeTab} centered>\n          <Tab label=\"Home\" id=\"home-tab\" aria-controls=\"home-panel\" />\n          <Tab label={\n            <Badge color=\"secondary\" badgeContent={likedJokes.length > 0 ? likedJokes.length : null}>\n              likes\n            </Badge>\n          } id=\"likes-tab\" aria-controls=\"likes-panel\" />\n        </Tabs>\n      </AppBar>\n\n      <main className=\"wrapper\">\n        <div className=\"tabpanel\" role=\"tabpanel\" id=\"home-panel\" hidden={currentTab !== 0}>\n          <button className=\"btn\" onClick={fetchJokes}>Give me some jokes</button>\n\n          <ol className=\"joke-list\">\n            {jokes.map(joke => (\n              <Joke  key={joke.id} joke={joke} addJoke={addJoke} />\n            ))}\n          </ol>\n        </div>\n        <div className=\"tabpanel\" role=\"tabpanel\" id=\"likes-panel\" hidden={currentTab !== 1}>\n          <div className=\"toggle-bar\">\n            <label className=\"c-switch\">\n              <input className=\"c-switch__input\" type=\"checkbox\" onClick={toggleTimer} value={!isTimerOn} />\n              <span className=\"c-switch__slider\"></span>\n            </label> Add random joke every 5 sec.\n          </div>\n\n          <ol className=\"joke-list\" data-variant=\"liked\">\n            {likedJokes.map(joke => (\n              <Joke  key={joke.id} joke={joke} unaddJoke={unaddJoke} />\n            ))}\n          </ol>\n        </div>\n      </main>\n\n      {loading && <Loader />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <header className=\"header\">\n      <div className=\"wrapper\">\n        <h1 className=\"header__title\">I'll give you some jokes!</h1>\n      </div>\n    </header>\n\n    <App />\n\n    <footer>\n      <small>By Roland Franke ;)</small>\n    </footer>\n  </React.StrictMode>, document.getElementById('root')\n);\n"],"sourceRoot":""}