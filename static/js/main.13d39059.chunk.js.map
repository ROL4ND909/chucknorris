{"version":3,"sources":["components/Joke/index.js","components/Loader/index.js","App.js","index.js"],"names":["joke","likeJoke","unlikeJoke","className","onClick","id","version","viewBox","aria-hidden","data-test","focusable","fillRule","d","data-variant","loader","data-text","API_URL","App","useState","jokes","setjokes","useLocalStorageState","likedJokes","setLikedJokes","isTimerOn","setTimerOn","length","shouldFetchMore","setShouldFetchMore","maxJokes","setmaxJokes","loading","setLoading","currentTab","setCurrentTab","find","j","likedJoke","addJoke","useEffect","timeout","fetch","then","res","json","console","log","value","setTimeout","clearTimeout","newLikedJokes","filter","AppBar","position","style","backgroundColor","Tabs","onChange","ev","centered","Tab","label","aria-controls","Badge","color","badgeContent","role","hidden","catch","err","warn","map","htmlFor","type","target","checked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13d39059.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Joke.scss';\n\nexport default function joke({ joke, likeJoke, unlikeJoke }) {\n  let button;\n\n  return (\n    <li className=\"joke\">\n      <p>{joke.joke}</p>\n\n      {likeJoke ? (\n        <button className=\"btn  btn--like\" onClick={() => likeJoke(joke.id)}>\n          <span className=\"srt\">Add to favorites</span>\n          <svg version=\"1.1\" viewBox=\"0 0 14 14\" aria-hidden=\"true\" className=\"svg-inline\" data-test=\"icon-heart\" focusable=\"false\"><path fillRule=\"evenodd\" d=\"M7 12s5-3.33 5-6.628S8.769.951 7 3.105C5.225.958 2 2.074 2 5.372S7 12 7 12z\"></path></svg>\n        </button>\n      ) : (\n        <button className=\"btn  btn--like\" data-variant=\"liked\" onClick={() => unlikeJoke(joke.id)}>\n          <span className=\"srt\">Remove from favorites</span>\n          <svg version=\"1.1\" viewBox=\"0 0 14 14\" aria-hidden=\"true\" className=\"svg-inline\" data-test=\"icon-heart\" focusable=\"false\"><path fillRule=\"evenodd\" d=\"M7 12s5-3.33 5-6.628S8.769.951 7 3.105C5.225.958 2 2.074 2 5.372S7 12 7 12z\"></path></svg>\n        </button>\n      )}\n    </li>\n  )\n}\n","import React from 'react'\n\nimport './Loader.scss';\n\nexport default function loader() {\n  return (\n    <div className=\"loader\">\n      <h1 className=\"loader__text\" data-text=\"Getting some jokes...\">Getting some jokes...</h1>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport useLocalStorageState from \"use-local-storage-state\";\n\nimport { Badge, AppBar, Tab, Tabs } from '@material-ui/core';\n\nimport Joke from './components/Joke/';\nimport Loader from './components/Loader';\nimport './App.scss';\n\nconst API_URL = `//api.icndb.com/jokes/random/`;\n\nfunction App() {\n  const [jokes, setjokes] = useState([]);\n  const [likedJokes, setLikedJokes] = useLocalStorageState('Jokes', []);\n  const [isTimerOn, setTimerOn] = useState(false);\n  const [shouldFetchMore, setShouldFetchMore] = useState(likedJokes.length < 10);\n  const [maxJokes, setmaxJokes] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const changeTab = (ev, value) => {\n    setCurrentTab(value);\n  };\n\n  // Getting the jokes\n  const fetchJokes = () => {\n    setLoading(true);\n\n    fetch(API_URL + '10')\n      .then((res) => res.json())\n      .then((res) => {\n        setjokes(res.value);\n\n        // putt it in a timeout to always show the loader\n        setTimeout(() => {\n          setLoading(false);\n        }, 300);\n      })\n      .catch((err) => console.warn(`We have an error here: err ${err}`));\n  };\n\n  const addJoke = (id) => {\n    if (likedJokes.find((j) => j.id === id)) return;\n\n    const likedJoke = jokes.find((j) => j.id === id);\n\n    setLikedJokes([likedJoke, ...likedJokes]);\n  }\n\n  const likeJoke = (id) => {\n    addJoke(id);\n\n    setmaxJokes(likedJokes.length > 9);\n  };\n\n  useEffect(() => {\n    // Runs everytime isTimerOn OR shouldFetchMore changes\n    // and also after the first render\n    let timeout;\n    if (isTimerOn && shouldFetchMore) {\n      fetch(API_URL)\n        .then(res => res.json())\n        .then((res) => {\n          console.log(res.value.id);\n          likeJoke(res.value.id);\n          setShouldFetchMore(false);\n\n          timeout = setTimeout(() => {\n            setShouldFetchMore(true)\n          }, 5000)\n        })\n    }\n\n    return () => {\n      // Runs when the component is unmounted\n      // avoid running the timeout callback on unmounted component\n      clearTimeout(timeout);\n    }\n  }, [isTimerOn, shouldFetchMore]);\n\n  const toggleTimer = (ev) => {\n    setTimerOn(ev.target.checked);\n  }\n\n  // Remove joke from liked list\n  const unlikeJoke = (id) => {\n    const newLikedJokes = likedJokes.filter((j) => j.id !== id);\n\n    setLikedJokes(newLikedJokes);\n  };\n\n  return (\n    <>\n      <AppBar position='sticky' style={{backgroundColor: `var(--color-sunglo)`}}>\n        <Tabs value={currentTab} onChange={changeTab} centered>\n          <Tab label=\"Home\" id=\"home-tab\" aria-controls=\"home-panel\" />\n          <Tab label={\n            <Badge color=\"secondary\" badgeContent={likedJokes.length > 0 ? likedJokes.length : null}>\n              likes\n            </Badge>\n          } id=\"likes-tab\" aria-controls=\"likes-panel\" />\n        </Tabs>\n      </AppBar>\n\n      <main className=\"wrapper\">\n        {maxJokes && <h1>List is full</h1>}\n\n        <div className=\"tabpanel\" role=\"tabpanel\" id=\"home-panel\" hidden={currentTab !== 0}>\n          <button className=\"btn\" onClick={fetchJokes}>Give me some jokes</button>\n\n          <ol className=\"joke-list\">\n            {jokes.map(joke => (\n              <Joke  key={joke.id} joke={joke} likeJoke={likeJoke} />\n            ))}\n          </ol>\n        </div>\n        <div className=\"tabpanel\" role=\"tabpanel\" id=\"likes-panel\" hidden={currentTab !== 1}>\n          <label htmlFor=\"toggleTimer\">\n            <input type=\"checkbox\" id=\"toggleTimer\" onClick={toggleTimer} checked={isTimerOn} />\n            Add random joke every 5 sec.\n          </label>\n\n          <ol className=\"joke-list\" data-variant=\"liked\">\n            {likedJokes.map(joke => (\n              <Joke  key={joke.id} joke={joke} unlikeJoke={unlikeJoke} />\n            ))}\n          </ol>\n        </div>\n      </main>\n\n      {loading && <Loader />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <header className=\"header\">\n      <div className=\"wrapper\">\n        <h1 className=\"header__title\">I'll give you some jokes!</h1>\n      </div>\n    </header>\n\n    <App />\n\n    <footer>\n      <small>By Roland Franke ;)</small>\n    </footer>\n  </React.StrictMode>, document.getElementById('root')\n);\n"],"sourceRoot":""}